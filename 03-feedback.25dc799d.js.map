{"mappings":"gfAAA,IAiBIA,EACAC,EACAC,EAnBJC,EAAAC,EAAA,SAIMC,EAAOC,SAASC,cAAc,kBAC9BC,EAAaF,SAASC,cAAc,SACpCE,EAAkBH,SAASC,cAAc,YACzCG,EAAoB,sBASmBL,EAAxCM,iBAAiB,SAAS,EAAAR,EAAAS,WAI/B,SAA0BC,GACG,KAArBL,EAAWM,OAA0C,KAA1BL,EAAgBK,QAC3Cd,EAAe,CACXe,MAAOP,EAAWM,MAClBE,QAASP,EAAgBK,OAE7Bb,EAAmBgB,KAAKC,UAAUlB,GAClCmB,aAAaC,QAAQV,EAAmBT,G,GAXU,MAmBC,IAArDoB,EAAkBF,aAAaG,QAAQZ,GAI7C,IACIR,EAAwBe,KAAKM,MAAMF,GACX,KAApBA,IACAb,EAAWM,MAAQZ,EAAsBa,MACzCN,EAAgBK,MAAQZ,EAAsBc,Q,CAEpD,MAAOQ,GACLC,QAAQD,MAAMA,EAAMR,Q,CAOxBX,EAAKM,iBAAiB,UAEtB,SAAsBe,GAElB,GADAA,EAAMC,iBACmB,KAArBnB,EAAWM,OAA0C,KAA1BL,EAAgBK,MAC3C,OAAOc,MAAM,8BAEjBH,QAAQI,IAAI3B,GACZiB,aAAaW,WAAWpB,GACxBF,EAAWM,MAAQ,GACnBL,EAAgBK,MAAQ,E","sources":["src/js/03-feedback.js"],"sourcesContent":["import { throttle } from \"lodash\";\n//Напиши скрипт, який буде зберігати значення полів у локальне сховище, \n//kоли користувач щось друкує.\n\nconst form = document.querySelector('.feedback-form')\nconst inputEmail = document.querySelector('input');\nconst textareaMessage = document.querySelector('textarea');\nconst KEY_SRORAGE_INPUT = \"feedback-form-state\";\n\n\n// 1.Відстежуй на формі подію input, і щоразу записуй у локальне сховище об'єкт \n// з полями email і message, у яких зберігай поточні значення полів форми.\n// Нехай ключем для сховища буде рядок \"feedback-form-state\".\n// 4.Зроби так, щоб сховище оновлювалось не частіше, ніж раз на 500 мілісекунд.\n// Для цього додай до проекту і використовуй бібліотеку lodash.throttle.\n\nform.addEventListener('input', throttle(saveCurrentValue, 500));\nlet feedbackUser;\nlet feedbackUserJSON;\nlet feedbackUserParseJSON;\nfunction saveCurrentValue(evt) {\n    if (inputEmail.value !== \"\" || textareaMessage.value !== \"\") {\n        feedbackUser = {\n            email: inputEmail.value,\n            message: textareaMessage.value\n        };\n        feedbackUserJSON = JSON.stringify(feedbackUser);\n        localStorage.setItem(KEY_SRORAGE_INPUT, feedbackUserJSON);\n    }\n};\n\n\n// 2.   Під час завантаження сторінки перевіряй стан сховища, і якщо там є збережені дані,\n// заповнюй ними поля форми.В іншому випадку поля повинні бути порожніми.\n\nconst getFeedbackUser = localStorage.getItem(KEY_SRORAGE_INPUT);\n\n// console.log(getFeedbackUser);\n\ntry {\n    feedbackUserParseJSON = JSON.parse(getFeedbackUser);\n    if (getFeedbackUser !== '') {\n        inputEmail.value = feedbackUserParseJSON.email;\n        textareaMessage.value = feedbackUserParseJSON.message;\n    }\n} catch (error) {\n    console.error(error.message);\n}\n\n\n// 3.Під час сабміту форми очищуй сховище і поля форми, а також виводь у консоль об'єкт \n// з полями email, message та їхніми поточними значеннями.\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n    event.preventDefault();\n    if (inputEmail.value === '' || textareaMessage.value === '') {\n        return alert('Please fill in all fields!');\n    }\n    console.log(feedbackUserParseJSON);\n    localStorage.removeItem(KEY_SRORAGE_INPUT);\n    inputEmail.value = '';\n    textareaMessage.value = '';\n};"],"names":["$b00c40859be242c5$var$feedbackUser","$b00c40859be242c5$var$feedbackUserJSON","$b00c40859be242c5$var$feedbackUserParseJSON","$1WSnx","parcelRequire","$b00c40859be242c5$var$form","document","querySelector","$b00c40859be242c5$var$inputEmail","$b00c40859be242c5$var$textareaMessage","$b00c40859be242c5$var$KEY_SRORAGE_INPUT","addEventListener","throttle","evt","value","email","message","JSON","stringify","localStorage","setItem","$b00c40859be242c5$var$getFeedbackUser","getItem","parse","error","console","event","preventDefault","alert","log","removeItem"],"version":3,"file":"03-feedback.25dc799d.js.map"}