{"mappings":"oeAAA,IAAAA,EAAAC,EAAA,SAIuB,MAAjBC,EAAOC,SAASC,cAAc,kBAC9BC,EAAaF,SAASC,cAAc,SACpCE,EAAkBH,SAASC,cAAc,YAG/CF,EAAKK,iBAAiB,SAAS,EAAAP,EAAAQ,WAe/B,SAA0BC,GACtB,GAAyB,KAArBJ,EAAWK,OAA0C,KAA1BJ,EAAgBI,MAAc,CACzDC,EAAaC,MAAQP,EAAWK,MAChCC,EAAaE,QAAUP,EAAgBI,MACvC,MAAMI,EAAmBC,KAAKC,UAAUL,GAExCM,aAAaC,QAvBK,sBAuBsBJ,E,IArBU,MAE1D,MAAMH,EAAe,IAIrB,WACI,MAAMQ,EAAkBF,aAAaG,QATf,uBAUhBC,EAAwBN,KAAKO,MAAMH,GACrCA,IACAd,EAAWK,MAAQW,EAAsBT,MACzCN,EAAgBI,MAAQW,EAAsBR,Q,CAPtDU,GAqBArB,EAAKK,iBAAiB,UAEtB,SAAsBiB,GAElB,GADAA,EAAMC,iBACmB,KAArBpB,EAAWK,OAA0C,KAA1BJ,EAAgBI,MAC3C,OAAOgB,MAAM,+BAQrB,WACI,MAAMC,EAAoBV,aAAaG,QAzCjB,uBA0ChBQ,EAAoBb,KAAKO,MAAMK,GACjCA,GACAE,QAAQC,IAAIF,E,CAVZG,GACA1B,EAAWK,MAAQ,GACnBJ,EAAgBI,MAAQ,GACxBO,aAAae,WArCK,sB","sources":["src/js/03-feedback.js"],"sourcesContent":["import { throttle } from \"lodash\";\n//Напиши скрипт, який буде зберігати значення полів у локальне сховище, \n//kоли користувач щось друкує.\n\nconst form = document.querySelector('.feedback-form')\nconst inputEmail = document.querySelector('input');\nconst textareaMessage = document.querySelector('textarea');\nconst KEY_STORAGE_INPUT = \"feedback-form-state\";\n\nform.addEventListener('input', throttle(saveCurrentValue, 500));\n\nconst feedbackUser = {};\n\ngetDateFeedback();\n\nfunction getDateFeedback() {\n    const getFeedbackUser = localStorage.getItem(KEY_STORAGE_INPUT);\n    const feedbackUserParseJSON = JSON.parse(getFeedbackUser);\n    if (getFeedbackUser) {\n        inputEmail.value = feedbackUserParseJSON.email;\n        textareaMessage.value = feedbackUserParseJSON.message;\n    };\n}\n\nfunction saveCurrentValue(evt) {\n    if (inputEmail.value !== \"\" || textareaMessage.value !== \"\") {\n        feedbackUser.email = inputEmail.value;\n        feedbackUser.message = textareaMessage.value;\n        const feedbackUserJSON = JSON.stringify(feedbackUser);\n\n        localStorage.setItem(KEY_STORAGE_INPUT, feedbackUserJSON);\n    }\n};\n\nform.addEventListener('submit', handleSubmit);\n\nfunction handleSubmit(event) {\n    event.preventDefault();\n    if (inputEmail.value === '' || textareaMessage.value === '') {\n        return alert('Please fill in all fields!');\n    } else {\n        showObjectfeedback();\n        inputEmail.value = '';\n        textareaMessage.value = '';\n        localStorage.removeItem(KEY_STORAGE_INPUT);\n    }\n};\nfunction showObjectfeedback() {\n    const checkfeedbackUser = localStorage.getItem(KEY_STORAGE_INPUT);\n    const feedbackParseJSON = JSON.parse(checkfeedbackUser);\n    if (checkfeedbackUser) {\n        console.log(feedbackParseJSON);\n    }\n}\n\n// 1.Відстежуй на формі подію input, і щоразу записуй у локальне сховище об'єкт \n// з полями email і message, у яких зберігай поточні значення полів форми.\n// 2.   Під час завантаження сторінки перевіряй стан сховища, і якщо там є збережені дані,\n// заповнюй ними поля форми.В іншому випадку поля повинні бути порожніми.\n// 3.Під час сабміту форми очищуй сховище і поля форми, а також виводь у консоль об'єкт \n// з полями email, message та їхніми поточними значеннями.\n// Нехай ключем для сховища буде рядок \"feedback-form-state\".\n// 4.Зроби так, щоб сховище оновлювалось не частіше, ніж раз на 500 мілісекунд.\n// Для цього додай до проекту і використовуй бібліотеку lodash.throttle.\n"],"names":["$kEUo3","parcelRequire","$945622fd0f572e60$var$form","document","querySelector","$945622fd0f572e60$var$inputEmail","$945622fd0f572e60$var$textareaMessage","addEventListener","throttle","evt","value","$945622fd0f572e60$var$feedbackUser","email","message","feedbackUserJSON","JSON","stringify","localStorage","setItem","getFeedbackUser","getItem","feedbackUserParseJSON","parse","$945622fd0f572e60$var$getDateFeedback","event","preventDefault","alert","checkfeedbackUser","feedbackParseJSON","console","log","$945622fd0f572e60$var$showObjectfeedback","removeItem"],"version":3,"file":"03-feedback.94087c38.js.map"}